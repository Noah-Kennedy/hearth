---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 2
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app: grafana
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - image: grafana/grafana-enterprise:latest
          imagePullPolicy: IfNotPresent
          name: grafana
          envFrom:
            - secretRef:
                name: grafana-db
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 60m
              memory: 288Mi
            requests:
              cpu: 40m
              memory: 192Mi
          volumeMounts:
            - mountPath: /etc/grafana
              name: ge-config
            - mountPath: /var/lib/grafana
              name: scratch
      volumes:
        - name: ge-config
          configMap:
            name: ge-config
        - name: scratch
          emptyDir:
            sizeLimit: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ge-config
data:
  grafana.ini: |
    app_mode = production

    [server]
    protocol = http
    http_port = 3000
    domain = grafana.nkcompute.net

    [database]
    type = postgres
    ssl_mode = disable

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http-grafana
  selector:
    app: grafana
  sessionAffinity: None
  type: LoadBalancer
